# Generated by Django 3.2.21 on 2023-09-18 12:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("database", "0126_alter_rowhistory_options"),
        ("core", "0074_email_notifications_user_timezone"),
        ("integrations", "0004_add_localbaserowservice_table"),
    ]

    operations = [
        migrations.CreateModel(
            name="LocalBaserowTableServiceSort",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.CharField(
                        choices=[("ASC", "Ascending"), ("DESC", "Descending")],
                        default="ASC",
                        help_text="Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.",
                        max_length=4,
                    ),
                ),
                (
                    "field",
                    models.ForeignKey(
                        help_text="The database Field, in the LocalBaserowTableService service, which we would like to sort upon.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="database.field",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        help_text="The service which this sort belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_sorts",
                        to="core.service",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LocalBaserowTableServiceFilter",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        help_text="Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).",
                        max_length=48,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        help_text="The filter value that must be compared to the field's value.",
                        max_length=255,
                    ),
                ),
                (
                    "field",
                    models.ForeignKey(
                        help_text="The database Field, in the LocalBaserowTableService, which we would like to filter upon.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="database.field",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        help_text="The service which this filter belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_filters",
                        to="core.service",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
